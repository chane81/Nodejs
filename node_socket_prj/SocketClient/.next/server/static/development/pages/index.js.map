{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ChatMsgBox.js","webpack:///./components/Head.js","webpack:///./components/ModalWrapper.js","webpack:///./config.js","webpack:///./containers/ModalWrapperContainer.js","webpack:///./pages/index.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"mobx\"","webpack:///external \"mobx-react\"","webpack:///external \"mobx-state-tree\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"socket.io-client\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { Component } from 'react'\r\nimport styles from '../style/ChatMsgBox.scss';\r\n\r\nconst ChatMsgBox = ({ message, isSelf, nickName, nickId}) => {\r\n  // 줄바꿈을 <br /> 로 치환\r\n  message = message.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\r\n\r\n  return (\r\n    <div className={`chat-msg-wrap ${ isSelf ? 'chat-right' : 'chat-left' }`}>\r\n      <div className={'chat-msg'}>\r\n        <div \r\n          className={'chat-picture'}\r\n          style={{\r\n            backgroundImage: `url('https://randomuser.me/api/portraits/thumb/men/${nickId}.jpg')`\r\n          }}\r\n        >\r\n        </div>\r\n        <div>\r\n          <span>\r\n            {/** string to html **/}\r\n            <div dangerouslySetInnerHTML={{__html: message}} />\r\n            <div className={'chat-nick'}>- {nickName} -</div>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ChatMsgBox;","import React from 'react'\r\nimport NextHead from 'next/head'\r\nimport { string } from 'prop-types'\r\n\r\nconst defaultDescription = ''\r\nconst defaultOGURL = ''\r\nconst defaultOGImage = ''\r\n\r\nconst Head = props => (\r\n  <NextHead>\r\n    <meta charSet=\"UTF-8\" />\r\n    <title>{props.title || ''}</title>\r\n    <meta\r\n      name=\"description\"\r\n      content={props.description || defaultDescription}\r\n    />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n    <link rel=\"icon\" sizes=\"192x192\" href=\"/static/touch-icon.png\" />\r\n    <link rel=\"apple-touch-icon\" href=\"/static/touch-icon.png\" />\r\n    <link rel=\"mask-icon\" href=\"/static/favicon-mask.svg\" color=\"#49B882\" />\r\n    <link rel=\"icon\" href=\"/static/favicon.ico\" />\r\n\r\n    {/* 아이콘 */}\r\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\" />\r\n\r\n    {/* 폰트 */}\r\n    <link href=\"https://fonts.googleapis.com/css?family=Inconsolata|Raleway|Ubuntu\" rel=\"stylesheet\" />\r\n  </NextHead>\r\n)\r\n\r\nHead.propTypes = {\r\n  title: string,\r\n  description: string,\r\n  url: string,\r\n}\r\n\r\nexport default Head\r\n","import { Component } from 'react'\r\nimport Link from 'next/link'\r\nimport styles from '../style/ModalWrapper.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ModalWrapper extends Component {\r\n  // 확인버튼 클릭시 프로퍼티 함수에 닉네임 전달하여 수행하게 함\r\n  handleClick = () => {\r\n\r\n    // store 에 닉네임 등록\r\n    this.props.handleNickRegist(this.nickBox.value);\r\n  };\r\n\r\n  // 입력창에서 엔터키 눌렀을 때\r\n  handleSendKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.handleClick();\r\n    }\r\n  };\r\n\r\n  // 별명입력 input 에 focus 주기\r\n  handleFocus = (e) => {\r\n    this.nickBox.focus();\r\n  }\r\n\r\n\r\n  render () {\r\n    const { isVisible } = this.props;\r\n\r\n    return (\r\n      <div className={ isVisible ? 'show' : 'hide' }>\r\n        <div className=\"nicknm-gray-background\"></div>\r\n        <div className=\"nicknm-wrapper\">\r\n          <div className=\"nicknm-modal\">\r\n            <div className=\"nicknm-input-container\" onClick={this.handleFocus}>\r\n              <input \r\n                className=\"nicknm-input\" \r\n                ref={ref => { this.nickBox = ref }} \r\n                type=\"text\" \r\n                placeholder=\"별명을 입력해주세요!\"\r\n                onKeyPress={this.handleSendKeyPress}\r\n              >\r\n              </input>\r\n              <span className='nicknm-btn-add' onClick={this.handleClick}>\r\n                <i className=\"fas fa-user fa-2x nicknm-user-icon\"></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalWrapper;","const env = process.env.NODE_ENV || 'development'; // 'development' or 'production'\r\n\r\nconst development = {\r\n\tsocketServerHost: \"http://localhost:5000\"\r\n}\r\n\r\nconst production = {\r\n\tsocketServerHost: \"https://socket-server-node.herokuapp.com\"\r\n}\r\n\r\nconst config = {\r\n\tdevelopment,\r\n\tproduction\r\n};\r\n\r\nmodule.exports = config[env];","import ModalWrapper from '../components/ModalWrapper';\r\nimport React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react'\r\n\r\nconst ModalWrapperContainer = ({ store, chatBox }) => {\r\n\r\n  const { \r\n    getModalVisible,\r\n    setCurrentNickName,\r\n    setCurrentNickId,\r\n    setSocketConnect,\r\n    setSocketReceive\r\n  } = store.socketModel;\r\n\r\n  const fnScrollMove = () => {\r\n\r\n    const { scrollHeight, clientHeight } = chatBox;\r\n    chatBox.scrollTop = scrollHeight - clientHeight;\r\n  }\r\n\r\n  const handleNickRegist = async (nickName) => {\r\n    // 닉네임을 상태에 등록\r\n    setCurrentNickName(nickName);\r\n\r\n    // 임시닉 ID 발급(랜덤사진 보여주기위해)\r\n    setCurrentNickId();\r\n  };\r\n\r\n  return (\r\n    <ModalWrapper isVisible={ getModalVisible } handleNickRegist={ handleNickRegist }></ModalWrapper>\r\n  );\r\n}\r\n\r\nexport default inject(({ store }) => ({ store }))(observer(ModalWrapperContainer));","import { Component } from 'react'\r\nimport Link from 'next/link'\r\nimport Head from '../components/Head'\r\nimport io from 'socket.io-client'\r\nimport styles from '../style/index.scss';\r\nimport ChatMsgBox from '../components/ChatMsgBox'\r\nimport config from '../config.js';\r\nimport ModalWrapper from '../components/ModalWrapper'\r\nimport { inject, observer } from 'mobx-react'\r\nimport ModalWrapperContainer from '../containers/ModalWrapperContainer';\r\nimport { onAction, onPatch } from 'mobx-state-tree';\r\nimport { autorun }from 'mobx';\r\n\r\n\r\n\r\n// @inject('store')\r\n// @observer\r\nclass Index extends Component {\r\n\r\n  // 스크롤 맨 아래로\r\n  fnScrollMove() {\r\n    const { scrollHeight, clientHeight } = this.chatBox;\r\n    this.chatBox.scrollTop = scrollHeight - clientHeight;\r\n\r\n    //this.chatBox.scrollToBottom();\r\n  }\r\n\r\n  // 소켓 연결\r\n  componentDidMount () {\r\n    const { store } = this.props;\r\n\r\n    console.log('config:', config);\r\n\r\n    const { socket, setSocket, setSocketConnect, setMessagesPush } = store.socketModel;\r\n\r\n    // autorun(() => {\r\n    //   console.log('test');\r\n    // })\r\n    \r\n    // mobx-state-tree patch 이벤트 핸들러\r\n    // onPatch(store, patch => {\r\n    //   console.log(\"onPatch\");\r\n    //   console.log(patch);\r\n    // });\r\n\r\n    // mobx-state-tree action 이벤트 핸들러 - 닉네임변경 액션이 발생했을 때 메세지 입력 input 쪽으로 focus 가 가도록 수정함\r\n    onAction(store, action => {\r\n      if (action.name === \"setCurrentNickName\") {\r\n        // 바로 포커스가 가지 않아서 setTimeout(1초) 를 줌\r\n        setTimeout(() => {\r\n          this.txtChat.focus();\r\n        }, 1000);\r\n      }\r\n    });\r\n\r\n\r\n    if (socket == null) {\r\n      const socketIo = io(config.socketServerHost, {\r\n        transports: ['websocket', 'polling'],\r\n        query: {\r\n          socketName: \"테스트\"\r\n        },\r\n        secure: true\r\n      });\r\n\r\n      // 접속한 소켓 set\r\n      socketIo.on(\"connect\", () => {\r\n        setSocket(socketIo);\r\n      });\r\n\r\n      socketIo.on('client.msg.receive', context => {\r\n        console.log('받은메시지:', context);\r\n\r\n        const receiveMsg = JSON.parse(context);\r\n\r\n        // 메시지들 배열에 push\r\n        setMessagesPush({ ...receiveMsg, isSelf: false });\r\n\r\n        this.fnScrollMove();\r\n      });\r\n\r\n      socketIo.on('connect_error', function(err) {\r\n        console.log('socket error');\r\n      });\r\n  \r\n      socketIo.on(\"disconnect\", () => {\r\n        console.log('서버 disconnected!');\r\n      });\r\n    }\r\n  }\r\n\r\n  // 소켓 종료\r\n  componentWillUnmount () {\r\n    const { store } = this.props;\r\n    store.socketModel.setSocketClose();\r\n  }\r\n\r\n  // 소켓 전송\r\n  // setSendMessage 가 비동기 이므로 async await 를 써서 스크롤 맨아래로내리는 부분 제대로 수행되게 함\r\n  handleSend = async (e) => {\r\n    const { store } = this.props;\r\n\r\n    // socket emit\r\n    await store.socketModel.setSendMessage(this.txtChat.value);\r\n\r\n    // 스크롤 맨 아래로\r\n    this.fnScrollMove();\r\n  };\r\n\r\n  // 입력창에서 엔터키 눌렀을 때\r\n  handleSendKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.handleSend(e);\r\n    }\r\n  };\r\n\r\n  // 전송할 텍스트 입력\r\n  handleChange = (e) => {\r\n    const { store } = this.props;\r\n    store.socketModel.setCurrentMessage(e.target.value);\r\n  };\r\n\r\n  // 챗박스 감싸고 있는 부분 클릭시 인풋박스 포커스이동되게 함\r\n  handleBoxClick = (e) => {\r\n    this.txtChat.focus();\r\n  }\r\n\r\n  render () {\r\n    const { store } = this.props;\r\n    const { messages, getModalVisible, currentMessage: { message } } = store.socketModel;\r\n\r\n    const msgBox = messages.map((data, index) => \r\n      <ChatMsgBox \r\n        isSelf={data.isSelf}\r\n        message={data.message}\r\n        nickName={data.nickName}\r\n        nickId={data.nickId}\r\n        key={index}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Head title=\"Home\" >\r\n        </Head>\r\n        <div className={'chat-wrap'}>\r\n          <div ref={ref => { this.chatBox = ref }} className={'chat-box'}>\r\n            {msgBox}\r\n          </div>\r\n          <div className={'chat-input-box shadow'} onClick={this.handleBoxClick}>\r\n              <input \r\n                onChange={this.handleChange} \r\n                ref={ref => { this.txtChat = ref }} \r\n                onKeyPress={this.handleSendKeyPress} \r\n                value={message} \r\n                type=\"text\"\r\n                placeholder=\"메시지를 입력해 주세요!\"\r\n              ></input>\r\n              <span className={'btn-add-container'} onClick={this.handleSend}>\r\n                <i className={\"fas fa-plus btn-add\"}></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <ModalWrapperContainer></ModalWrapperContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(({ store }) => ({ store }))(observer(Index));\r\n\r\n//export default Index\r\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"mobx\");","module.exports = require(\"mobx-react\");","module.exports = require(\"mobx-state-tree\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"socket.io-client\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA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","sourceRoot":""}