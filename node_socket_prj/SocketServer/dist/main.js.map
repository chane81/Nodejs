{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/server.ts","webpack:///external \"dotenv\"","webpack:///external \"http\"","webpack:///external \"koa\"","webpack:///external \"koa2-cors\"","webpack:///external \"lodash\"","webpack:///external \"net\"","webpack:///external \"socket.io\"","webpack:///external \"uuid/v1\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.ts\");\n","import dotenv from 'dotenv';\r\nimport koa from 'koa';\r\nimport router from 'koa-router';\r\nimport http from 'http';\r\nimport bodyParser from 'koa-bodyparser';\r\nimport cors from 'koa2-cors';\r\nimport net from 'net';\r\nimport _ from 'lodash';\r\nimport uuidv1 from 'uuid/v1';\r\n\r\n/* 설정 세팅 =================================================================================================*/\r\ndotenv.config();\r\nconst app = new koa();\r\nconst server = new http.Server(app.callback());\r\nconst socketIo = require('socket.io')(server, {\r\n\tpingInterval: 10000,\t\t\t\t\t\t\t\t\t\t\t\t// ping 인터벌\r\n\tpingTimeout: 10000,\t\t\t\t\t\t\t\t\t\t\t\t\t// ping 타임아웃\r\n\ttransports: [ 'websocket', 'polling' ]\r\n});\r\n\r\n// 포트\r\nconst socketIoPort: number = Number(process.env.SOCKET_IO_PORT) || 5000;\r\nconst ip: string = process.env.IP || '127.0.0.1';\r\nconst netPort: number = Number(process.env.NET_PORT) || 5001;\r\n\r\n// 개발모드인지 여부 true/false\r\nconst dev: boolean = process.env.NODE_ENV !== 'production';\r\n\r\n\r\n// 클라이언트 타입\r\ninterface clientType {\r\n\tclientSocket: any;\r\n\tuniqueId: string;\r\n\tsocketName: string;\r\n\tsocketGubun: string;\r\n}\r\n\r\n// CORS 관련 옵션 설정\r\napp.use(\r\n\tcors({\r\n\t\torigin: (ctx) => '*'\r\n\t})\r\n);\r\n\r\n\r\n// 접속 클라이언틑 정보\r\nconst clientPool: clientType[] = [];\r\n\r\n\r\n// 접속한 클라이언트들 로그로 보여주기\r\nfunction connectClients() {\r\n\tconsole.log('접속 클라이언트들:');\r\n\tclientPool.map((data) => {\r\n\t\t\tconst {uniqueId, socketName, socketGubun} = data;\r\n\t\t\tconsole.log(`socketGubun:${socketGubun}, uniqueId:${uniqueId}, socketName:${socketName}`);\r\n\t});\r\n}\r\n/* 설정 세팅 =================================================================================================*/\r\n\r\n\r\n/* SOCKET.IO 서버 =================================================================================================*/\r\n// 소켓통신 이벤트 핸들러\r\n// connection\r\nsocketIo.on('connection', (socket: any) => {\r\n\t\r\n\t// 클라이언트 정보\r\n\tconst clientInfo: clientType = {\r\n\t\tclientSocket: socket,\r\n\t\tuniqueId: socket.id,\r\n\t\tsocketName: socket.handshake.query.socketName,\r\n\t\tsocketGubun: 'socket.io'\r\n\t};\r\n\r\n\t// 클라이언트 정보 PUSH\r\n\tclientPool.push(clientInfo);\r\n\r\n\t\r\n\t// 접속한 클라이언트들 보여주기\r\n\tconnectClients();\r\n\r\n\r\n\t// SERVER RECEIVE 이벤트 핸들러(클라이언트 -> 서버)\r\n\tsocket.on('disconnect', (context: any) => {\r\n\t\t_.remove(clientPool, (data: any) => data.uniqueId === socket.id);\r\n\t\tconsole.log('socket.io client disconnected!');\r\n\t});\r\n\r\n\r\n\tsocket.on('client.msg.send', (context: any) => {\r\n\t\tconsole.log('socket.io data:', context);\r\n\r\n\t\tsocket.broadcast.emit('client.msg.receive', context);\r\n\r\n\t\t// .NET 클라이언트에게로 메시지 보내기\r\n\t\tclientPool.filter((data) => data.socketGubun === 'net').map((data) => {\r\n\t\t\t\r\n\t\t\tdata.clientSocket.write(JSON.stringify({\r\n\t\t\t\taction: 'client.msg.receive',\r\n\t\t\t\tdata: context\r\n\t\t\t}), (err:any) => {\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n});\r\n\r\n\r\n\r\n// app.use(bodyParser());\r\n\r\n// router.get('/messages/:chat', (ctx, next) => {\r\n//   console.log(messages[ctx.params.chat]);\r\n//   ctx.body = JSON.stringify(messages[ctx.params.chat]);\r\n// });\r\n\r\n// router.get('*', async (ctx, next) => {\r\n//   return await nextHandler(ctx.req, ctx.res);\r\n// })\r\n\r\n//app.use(router.routes());\r\n\r\n// socket.io 서버 listen\r\nserver.listen(socketIoPort, ip, (err: any) => {\r\n\tif (err) throw err;\r\n\tconsole.log(`> SOCKET.IO Server Listening! http://localhost:${socketIoPort}`);\r\n});\r\n/* SOCKET.IO 서버 =================================================================================================*/\r\n\r\n\r\n\r\n/* NET 서버 =======================================================================================================*/\r\n// net 서버 listen\r\n// const netServer = net.createServer((socket: any) => {\r\n// \tconsole.log('> Ready On NET Server!');\r\n\r\n// \tsocket.on('end', () => {\r\n// \t\tconsole.log('> NET Server End');\r\n// \t});\r\n\r\n// \tsocket.on('');\r\n// });\r\nconst netServer = net.createServer((socket) => {\r\n\tconst remoteAddress = socket.remoteAddress + ':' + socket.remotePort;\r\n\tconsole.log('client connected:', remoteAddress);\r\n\r\n\t// clientPool.map((data) => {\r\n\t// \tconsole.log('접속 클라이언트들:', data.socketName, data.uniqueId);\r\n\t// });\r\n\r\n\r\n\t// 클라이언트 정보\r\n\tconst clientInfo: clientType = {\r\n\t\tclientSocket: socket,\r\n\t\tuniqueId: uuidv1(),\r\n\t\tsocketName: '',\r\n\t\tsocketGubun: 'net'\r\n\t};\r\n\r\n\t\r\n\r\n\t// 클라이언트에게 uniqueId 를 전송함\r\n\tsocket.write(JSON.stringify({\r\n\t \taction: 'client.msg.connected',\r\n\t \tdata: clientInfo.uniqueId\r\n\t}));\r\n\r\n\t// 클라이언트 정보 PUSH\r\n\tclientPool.push(clientInfo);\r\n\r\n\r\n\t// 접속한 클라이언트들 보여주기\r\n\tconnectClients();\r\n\r\n\r\n\tsocket.on('data', (data) => {\r\n\t\tconst msg = data.toString();\r\n\t\tconsole.log('net data:', msg);\r\n\r\n\t\t// 브라우저쪽으로 .NET 클라이언트에서 보낸 메세지 보내기\r\n\t\tclientPool.filter((data) => data.socketGubun === 'socket.io').map((data) => {\r\n\t\t\tdata.clientSocket.emit('client.msg.receive', msg);\r\n\t\t});\r\n\t});\r\n\r\n\tsocket.on('close', () => {\r\n\t\tconsole.log('NET Server Closed!');\r\n\r\n\t\t// 연결 끊어진 소켓을 클라이언트풀에서 삭제처리\r\n\t\t_.remove(clientPool, (data: any) => data.clientSocket === socket);\r\n\r\n\t\t// 접속한 클라이언트들 보여주기\r\n\t\tconnectClients();\r\n\r\n\t\tsocket.end('소켓 closed!');\r\n\t});\r\n\r\n\tsocket.on('end', () => {\r\n\t\tconsole.log('NET Socket Client end!');\r\n\t})\r\n\r\n\t socket.on('error', (err) => {\r\n\t\t\r\n\t});\r\n});\r\n\r\nnetServer.on('connection', (conn) => {\r\n\tconsole.log('connected!');\r\n\r\n\t// 접속한 클라이언트들 보여주기\r\n\tconnectClients();\r\n\t//console.log(conn);\r\n});\r\n\r\nnetServer.listen(netPort, ip, () => {\r\n\tconsole.log(`> NET Server Listening! 127.0.0.1:${netPort}`);\r\n});\r\n/* NET 서버 =======================================================================================================*/","module.exports = require(\"dotenv\");","module.exports = require(\"http\");","module.exports = require(\"koa\");","module.exports = require(\"koa2-cors\");","module.exports = require(\"lodash\");","module.exports = require(\"net\");","module.exports = require(\"socket.io\");","module.exports = require(\"uuid/v1\");"],"sourceRoot":""}